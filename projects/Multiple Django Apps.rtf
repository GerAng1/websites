{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 When running multiple Django apps on the same server, each app will typically have the same IP address. The IP address refers to the address of the server itself, and all incoming requests will be directed to that IP address.\
\
However, the different Django apps can be accessed using different domain names or subdomains, which are mapped to the server's IP address. For example, you can configure your DNS settings to point `app1.example.com` to one Django app and `app2.example.com` to another Django app, even though they share the same IP address.\
\
In this scenario, the web server (e.g., Apache or Nginx) is responsible for routing the incoming requests to the appropriate Django app based on the domain or subdomain specified in the request's URL.\
\
So, while the IP address remains the same for all the apps on the server, the domain or subdomain used to access each app can be different, providing a way to distinguish between the various Django apps running on the server.}